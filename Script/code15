         exit(11);
     }
     //--------------------------------
     //  Read the header (TARGA file)
     //--------------------------------
     char    head[18] ;
     fread( head, sizeof(char), 18, tga_in ) ;
     /* Get the size of the image */
     info.width = (int)(((unsigned int)head[12]&0xFF) | (unsigned int)head[13]*256);
     info.height = (int)(((unsigned int)head[14]&0xFF) | (unsigned int)head[15]*256);
     unsigned int imgSize = info.height * info.width;
     unsigned char* data;
     if((head[2] == 2) && (head[16] == 24))
     {
         info.type = RGBA32_RASTER;
         info.bytesPerPixel = 4;
         info.bytesPerRow = 4*info.width;
         data = (unsigned char*) malloc(imgSize*4);
     }
     else if((head[2] == 3) && (head[16] == 8))
     {
         info.type = GRAY_RASTER;
         info.bytesPerPixel = 1;
         info.bytesPerRow = info.width;
         data = (unsigned char*) malloc(imgSize);
     }
     else
     {
         printf("Unsuported TGA image: ");
         printf("Its type is %d and it has %d bits per pixel.\n", head[2], head[16]);
         printf("The image must be uncompressed while having 8 or 24 bits per pixel.\n");
         fclose(tga_in);
         exit(12);
     }
     if(data == NULL)
     {
         printf("Unable to allocate memory\n");
         fclose(tga_in);
         exit(13);
