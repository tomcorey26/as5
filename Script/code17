         //  we need to swap the Red and Blue components
         swapRGBA(data, info.height, info.width);
     }
     //  Case of a gray-level image
     //----------------------------  
     else
     {
         //  First check if the image is mirrored vertically (a bit setting in the header)
         if(head[17]&0x20)
         {
             unsigned char* ptr = data + imgSize - info.width;
             for(int i = 0; i < info.height; i++)
             {
                 fread( ptr, sizeof(char), info.width, tga_in ) ;
                 ptr -= info.width;
             }
         }
         else
             fread(data, sizeof(char), imgSize, tga_in);
     }
     fclose( tga_in) ;
     return info;
 }   
 //---------------------------------------------------------------------*
 //  Function : writeTGA 
 //  Description :
 //  
 //   This function write out an image of type TGA (24-bit color)
 //  
 //  Return value: Error code (0 = no error)
 //----------------------------------------------------------------------*/ 
 int writeTGA(char* filePath, ImageStruct* info)
 {
     //--------------------------------
     // open TARGA output file 
     //--------------------------------
     FILE* tga_out = fopen(filePath, "wb" );
     if (tga_out == NULL)
     {
