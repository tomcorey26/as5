         kPGM                    //  8-bit gray-level image
 } ImageFileType;
 /** This is the enum type that refers to images loaded in memory, whether
  *  they were read from a file, played from a movie, captured from a live
  *  video stream, or the result of calculations.
  *  Feel free to edit and add types you need for your project.
  */
 typedef enum ImageType
 {
         /** No type, for an image that got freed (no more raster)
          */
         NO_RASTER,
          
         /** Color image with 4 bytes per pixel
          */
         RGBA32_RASTER,
         /** Gray image with 1 byte per pixel
          */
         GRAY_RASTER,
         /** Gray image with 2 bytes per pixel
          */
         DEEP_GRAY_RASTER,
         /** Monochrome image (either gray or one color channel of a color image)
          *  stored in a float raster
          */
         FLOAT_RASTER
             
 } ImageType;
 /** This is the data type to store all relevant information about an image.  After
  *  some thought, I have decided to store the 1D and 2D rasters as void* rather than
  *  having separate unsigned char and float pointers
  */
 typedef struct ImageStruct {
     /** Type of image stored
      */
     ImageType type;
     /** Maximum value for all fields of the image
      *  (only useful for DEEP_GRAY_RASTER and FLOAT_RASTER types)
      */
